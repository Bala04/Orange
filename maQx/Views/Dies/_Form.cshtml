@model maQx.Models.DieViewModel

<div class="admin-form-layout">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @{
        var a = @ViewContext.RouteData.Values["action"].ToString();
    }

    <div class="form-group">
        <div>
            @Html.TextBoxFor(model => model.Code, new { placeholder = "Die Code" })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            @Html.TextBoxFor(model => model.Description, new { placeholder = "Die Description" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            @Html.TextBoxFor(model => model.MaxCount, new { placeholder = "Life Count" })
            @Html.ValidationMessageFor(model => model.MaxCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            @Html.TextBoxFor(model => model.Tolerance, new { placeholder = "Tolerance Count" })
            @Html.ValidationMessageFor(model => model.Tolerance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            @Html.TextBoxFor(model => model.MaxSink, new { placeholder = "Sink Count" })
            @Html.ValidationMessageFor(model => model.MaxSink, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            <div>
                <input type="submit" value="@a" class="btn btn-default @(a == "Edit" ? "btn-warning" : "app-btn")" />
                <input type="reset" value="Clear" class="btn btn-default inverse-btn" />
            </div>
        </div>
    </div>
</div>




