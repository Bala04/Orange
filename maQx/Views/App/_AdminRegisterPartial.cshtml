@model maQx.Models.AdminRegisterViewModel


<div class="confrim-admin-email-template admin-register-template">

    <div>
        @using (Html.BeginForm("Register", "App"))
        {
            @Html.AntiForgeryToken()

            <div class="admin-form">
                <h1>Complete your profile</h1>

                <p>Profile informations used by the application to enhance user experience and also for lateral communications.</p>

                <div class="admin-form-layout">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <div>
                            @Html.TextBoxFor(model => model.Code, new { placeholder = "Employee Code" })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.TextBoxFor(model => model.Name, new { placeholder = "Name" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            <div class="input-group">
                                <div class="input-group-addon addon-text">+91</div>
                                @Html.TextBoxFor(model => model.Phone, new { placeholder = "Contact Number", @type = "tel" })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.PasswordFor(model => model.Password, new { placeholder = "New Password" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "Confirm Password" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.HiddenFor(m => m.StepCode, new { @readonly = "readonly" })
                            <div>
                                <input type="submit" value="Continue" class="btn btn-default app-btn" />
                                <input type="reset" value="Clear" class="btn btn-default inverse-btn" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
